"""empty message

Revision ID: 3a6ccce0ece2
Revises: 
Create Date: 2025-06-16 17:34:11.941518

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3a6ccce0ece2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mutacao',
    sa.Column('nome', sa.String(length=50), nullable=False),
    sa.Column('tipo_heranca', sa.String(length=20), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('cor_resultante', sa.String(length=100), nullable=True),
    sa.Column('gene', sa.String(length=50), nullable=True),
    sa.Column('simbolo', sa.String(length=10), nullable=True),
    sa.Column('alelo_dominante', sa.String(length=10), nullable=True),
    sa.Column('alelo_recessivo', sa.String(length=10), nullable=True),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("alelo_dominante GLOB '[A-Z]'", name='check_alelo_dominante_valido'),
    sa.CheckConstraint("alelo_recessivo GLOB '[a-z]'", name='check_alelo_recessivo_valido'),
    sa.CheckConstraint("simbolo GLOB '[A-Za-z]'", name='check_simbolo_valido'),
    sa.CheckConstraint("tipo_heranca IN ('dominante', 'recessivo', 'ligado ao sexo')", name='check_tipo_heranca_valido'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nome')
    )
    op.create_table('plantel',
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mutacao_compativel',
    sa.Column('mutacao_id', sa.Integer(), nullable=False),
    sa.Column('compativel_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('mutacao_id < compativel_id', name='check_sem_ciclos'),
    sa.ForeignKeyConstraint(['compativel_id'], ['mutacao.id'], ),
    sa.ForeignKeyConstraint(['mutacao_id'], ['mutacao.id'], ),
    sa.PrimaryKeyConstraint('mutacao_id', 'compativel_id')
    )
    op.create_table('usuario',
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('senha_hash', sa.String(length=255), nullable=False),
    sa.Column('tipo', sa.String(length=20), nullable=True),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('plantel_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plantel_id'], ['plantel.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('ave',
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('sexo', sa.String(length=1), nullable=False),
    sa.Column('nascimento', sa.Date(), nullable=True),
    sa.Column('cor_base', sa.String(length=50), nullable=True),
    sa.Column('disponivel', sa.Boolean(), nullable=True),
    sa.Column('preco', sa.Float(), nullable=True),
    sa.Column('preco_negociavel', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('historico_medico', sa.Text(), nullable=True),
    sa.Column('foto_principal', sa.String(length=200), nullable=True),
    sa.Column('pai_id', sa.Integer(), nullable=True),
    sa.Column('mae_id', sa.Integer(), nullable=True),
    sa.Column('proprietario_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("sexo IN ('M', 'F')", name='check_sexo_valido'),
    sa.CheckConstraint("status IN ('ativo', 'vendido', 'falecido')", name='check_status_valido'),
    sa.CheckConstraint('preco >= 0', name='check_preco_positivo'),
    sa.ForeignKeyConstraint(['mae_id'], ['ave.id'], ),
    sa.ForeignKeyConstraint(['pai_id'], ['ave.id'], ),
    sa.ForeignKeyConstraint(['proprietario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ave_mutacao',
    sa.Column('ave_id', sa.Integer(), nullable=False),
    sa.Column('mutacao_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ave_id'], ['ave.id'], ),
    sa.ForeignKeyConstraint(['mutacao_id'], ['mutacao.id'], ),
    sa.PrimaryKeyConstraint('ave_id', 'mutacao_id')
    )
    op.create_table('cruzamento',
    sa.Column('pai_id', sa.Integer(), nullable=False),
    sa.Column('mae_id', sa.Integer(), nullable=False),
    sa.Column('data_cruzamento', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['mae_id'], ['ave.id'], ),
    sa.ForeignKeyConstraint(['pai_id'], ['ave.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('foto_ave',
    sa.Column('caminho', sa.String(length=200), nullable=False),
    sa.Column('descricao', sa.String(length=200), nullable=True),
    sa.Column('ordem', sa.Integer(), nullable=True),
    sa.Column('ave_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ave_id'], ['ave.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requisicao',
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('ave_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ave_id'], ['ave.id'], ),
    sa.ForeignKeyConstraint(['cliente_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('requisicao')
    op.drop_table('foto_ave')
    op.drop_table('cruzamento')
    op.drop_table('ave_mutacao')
    op.drop_table('ave')
    op.drop_table('usuario')
    op.drop_table('mutacao_compativel')
    op.drop_table('plantel')
    op.drop_table('mutacao')
    # ### end Alembic commands ###
